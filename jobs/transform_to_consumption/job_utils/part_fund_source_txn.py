
from pyspark.sql import SparkSession
from pyspark.sql.functions import *


def transform(spark: SparkSession, batch_date: str, primary_key: list):

    consumption_df = spark.sql("select coalesce(mn.client_id, '-9999') as client_id,coalesce(mn.plan_number, '-9999') as plan_number,coalesce(mn.participant_id, '-9999') as participant_id,coalesce(cast(mn.posting_process_counter as varchar(10)),'-9999') as posting_process_counter,mn.rev_code,coalesce(mn.money_source, '-9999') as money_source,coalesce(mn.run_date, current_date()) as run_date,coalesce(mn.trade_date, current_date()) as trade_date,coalesce(pf.fund_number,'-9999') as fund_number,mn.total_cash_amount,mn.total_share_price,mn.total_unit_shares,cast(null as varchar(36)) as participant_key,cast(null as varchar(36)) as client_key from (select coalesce(plst.client_id, '-9999') as client_id,coalesce(plst.plan_number, '-9999') as plan_number,coalesce(plst.participant_id, '-9999') as participant_id,coalesce(cast(plst.posting_process_counter as varchar(10)),'-9999') as posting_process_counter,rev_code,coalesce(money_source, '-9999') as money_source,coalesce(plst.run_date, current_date()) as run_date,coalesce(plst.trade_date, current_date()) as trade_date,coalesce(cast(total_cash_amount as decimal(17, 2)), 0.00) as total_cash_amount,coalesce(cast(total_share_price as decimal(17, 2)), 0.00) as total_share_price,coalesce(cast(total_shares as decimal(17, 4)), 0.00) as total_unit_shares,cast(null as varchar(36)) as participant_key,cast(null as varchar(36)) as client_key from (select distinct(t.run_date) as as_on_date,pals.client_id as client_id,t.div_sub_id as div_sub_id,pals.plan_number as plan_number,t.participant_id as participant_id,t.pay_period_end_date as pay_period_end_date,t.posting_process_counter as posting_process_counter,t.rev_code as rev_code,pals.money_source as money_source,t.source_cycle_date as source_cycle_date,t.trade_date as trade_date,t.run_date as run_date,sum(t.cash) over (partition by pals.plan_number,pals.participant_id,pals.money_source,t.run_date order by t.run_date asc) as total_cash_amount,sum(t.share_price) over (partition by pals.plan_number,pals.participant_id,pals.money_source,t.run_date order by t.run_date asc ) as total_share_price,sum(t.shares) over (partition by pals.plan_number,pals.participant_id,pals.money_source,t.run_date order by t.run_date asc ) as total_shares from txn t right outer join (select ps.participant_id,ps.client_id,ps.plan_number,ps.money_source from participant_source ps ) pals on coalesce(pals.participant_id, '-9999') = coalesce(t.participant_id, '-9999') and coalesce(pals.plan_number, '-9999') = coalesce(t.plan_number, '-9999') and coalesce(pals.money_source, '-9999') = coalesce(t.money_source, '-9999') order by participant_id asc ) plst left outer join calendar_helper calh on plst.run_date = calh.mo_last_business_day where calh.mo_last_business_day is null order by plst.participant_id asc) mn left outer join (select plan_number,fund_number from plan_fund) pf on coalesce(mn.plan_number,'-9999')=coalesce(pf.plan_number,'-9999');")

    return consumption_df