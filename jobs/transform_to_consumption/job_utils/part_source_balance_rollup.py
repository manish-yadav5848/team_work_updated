
from pyspark.sql import SparkSession
from pyspark.sql.functions import *


def transform(spark: SparkSession, batch_date: str, primary_key: list):

    consumption_df = spark.sql("select t1.client_id as client_id, coalesce(nullif(t1.plan_number, ''), '-9999') as plan_number, t1.participant_id as participant_id, t1.source, t1.retirement_account_id, coalesce(nullif(t1.div_sub_id, ''), '-9999') as div_sub_id, cast(t1.total_shares as decimal(17, 4)) as total_shares, cast(t1.total_cash_amount as DECIMAL(17, 2)) as total_cash_amount, cast(t1.source_vested_amount as DECIMAL(17, 2)) as source_vested_amount, cast( coalesce(t2.last_contribution_amount, 0) as decimal(13, 2) ) as last_contribution_amount, cast( coalesce(t1.ytd_contributions, 0) as decimal(13, 2) ) as ytd_contributions, t2.last_contribution_date as last_contribution_date, pcb2.money_source_name as money_source_name, t1.source_cycle_date as source_cycle_date, cast(last_day (t1.source_cycle_date) as DATE) as source_month_end_date, pcb2.money_type_description as money_type_code, cast(null as Varchar(36)) as plan_key, cast(null as Varchar(36)) as participant_key, cast(null as varchar(36)) as participant_source_key, ( CASE when pcb2.money_type_description = 'EE' then 'EMPLOYEE' else 'EMPLOYER' end ) as money_type_name from ( select coalesce(ppspcb.money_source, '-9999') as source, coalesce(ppspcb.participant_id, '-9999') as participant_id, coalesce(ppspcb.client_id, '-9999') as client_id, coalesce(ppspcb.plan_number, '-9999') as plan_number, coalesce(pt.div_sub_id, '-9999') as div_sub_id, ppspcb.retirement_account_id, sum(coalesce(ppspcb.vested_balance, 0)) as source_vested_amount, sum(ppspcb.total_shares) as total_shares, sum(ppspcb.cash_value_amount) as total_cash_amount, sum(ppspcb.ytd_contributions) as ytd_contributions, ppspcb.source_cycle_date from participant_core_balance ppspcb left outer join participant pt on ppspcb.client_id = pt.client_id and ppspcb.plan_number = pt.plan_number and ppspcb.participant_id = pt.participant_id group by source, ppspcb.participant_id, ppspcb.client_id, ppspcb.retirement_account_id, ppspcb.plan_number, div_sub_id, ppspcb.source_cycle_date ) as t1 left outer join ( select plan_number, participant_id, money_source, last_contribution_date, last_contribution_amount from ( select plan_number, participant_id, money_source, last_contribution_date, last_contribution_amount, row_number() Over ( partition by plan_number, participant_id, money_source order by last_contribution_date desc ) as rn from ( SELECT t.plan_number, t.participant_id, t.money_source, cast(sum(t.cash) as decimal(13, 2)) AS last_contribution_amount, t.trade_date AS last_contribution_date FROM txn t WHERE ( ( t.base_transaction_code IN ('114', '154', '165', '301') AND t.activity_type = '001' ) OR ( t.base_transaction_code = '301' AND t.activity_type IN ('006', '007', '008', '009') ) OR ( ( t.base_transaction_code = '381' AND t.activity_type = '007' ) AND ( t.usage_code_1 = '9' OR t.usage_code_2 = '9' OR t.usage_code_3 = '9' OR t.usage_code_4 = '9' OR t.usage_code_5 = '9' ) ) ) and t.trade_date>'2023-01-01' group by t.plan_number, t.participant_id, t.money_source, t.trade_date union all select plan_number, policy_number as participant_id, right (policy_number, 2) as money_source, cast(sum(coalesce(gross_amount, 0)) as decimal(13, 2)) as last_contribution_amount, cast(process_date as date) as last_contribution_date from newr_raw.nw00paap_nlarc_prdps_pdab_lmia_data group by last_contribution_date, participant_id, plan_number union all select plan_number, participant_id, money_source, cast(last_contribution_amount as decimal(13, 2)) as last_contribution_amount, cast(last_contribution_date as date) as last_contribution_date from newr_raw.super_omni_itd_tr_hist_jb_dat union all select plan_number, participant_id, money_source, cast(last_contribution_amount as decimal(13, 2)) as last_contribution_amount, cast(last_contribution_date as date) as last_contribution_date from newr_raw.super_omni_itd_tr_hist_ng_dat ) as combined_data ) as ranked_data where rn = 1 ) as t2 on coalesce(trim(t1.participant_id), '-9999') = coalesce(trim(t2.participant_id), '-9999') AND coalesce(t1.source, '-9999') = coalesce(t2.money_source, '-9999') AND coalesce(t1.plan_number, '-9999') = coalesce(t2.plan_number, '-9999') left outer join ( select client_id, plan_number, money_source, source_cycle_date, participant_id, money_type_description, money_source_name, count(1) from participant_core_balance group by client_id, plan_number, money_source, source_cycle_date, participant_id, money_type_description, money_source_name ) as pcb2 ON coalesce(t1.participant_id, '-9999') = coalesce(pcb2.participant_id, '-9999') AND coalesce(t1.source, '-9999') = coalesce(pcb2.money_source, '-9999') AND coalesce(t1.plan_number, '-9999') = coalesce(pcb2.plan_number, '-9999') and coalesce(t1.client_id, '-9999') = coalesce(pcb2.client_id, '-9999')")
    return consumption_df
