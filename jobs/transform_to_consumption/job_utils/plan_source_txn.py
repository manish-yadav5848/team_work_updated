
from pyspark.sql import SparkSession
from pyspark.sql.functions import *


def transform(spark: SparkSession, batch_date: str, primary_key: list):

    consumption_df = spark.sql("select   coalesce(run_Date, current_date()) as run_date,   coalesce(trade_date, current_date()) as trade_date,   coalesce(client_id, '-9999') as client_id,   coalesce(plan_number, '-9999') as plan_number,   coalesce(money_source, '-9999') as money_source,   coalesce(cast(transaction_amt as decimal(17, 2)), 0.00) as transaction_amt,   coalesce(     cast(transaction_unit_qty as decimal(17, 2)),     0.00   ) as transaction_unit_qty,   coalesce(     cast(transaction_unit_price_amt as decimal(17, 2)),     0.00   ) as transaction_unit_price_amt,   cast(null as varchar(36)) as client_key,   cast(null as varchar(36)) as plan_key,   cast(null as varchar(36)) as plan_source_key from   (     select       distinct(pst.as_on_date) as run_date,       pst.trade_date,       pst.client_id,       pst.plan_number,       pst.money_source,       pst.transaction_amt,       sum(pf.units_shares) over (         partition by pst.client_id,         pst.plan_number,         pst.money_source,         pst.as_on_date       ) as transaction_unit_qty,       sum(pf.val_one_share_or_unit_or_bond) over (         partition by pst.client_id,         pst.plan_number,         pst.money_source,         pst.as_on_date       ) as transaction_unit_price_amt     from       (         select           distinct(t.run_date) as as_on_date,           t.trade_date as trade_date,           ps.client_id,           ps.plan_number,           ps.money_source,           sum(t.cash) over (             partition by ps.client_id,             ps.plan_number,             ps.money_source,             t.run_date,             trade_date             order by               t.run_date asc           ) as transaction_amt         from           txn t           right outer join plan_source ps on coalesce(ps.plan_number, '-9999') = coalesce(t.plan_number, '-9999')           and coalesce(ps.money_source, '-9999') = coalesce(t.money_source, '-9999')       ) pst       left outer join plan_fund pf on coalesce(pst.plan_number, '-9999') = coalesce(pf.plan_number, '-9999')       and coalesce(pst.client_id, '-9999') = coalesce(pf.client_id, '-9999')       left outer join calendar_helper calh on pst.as_on_date = calh.mo_last_business_day     where       calh.mo_last_business_day is null     order by       plan_number asc   )")

    return consumption_df