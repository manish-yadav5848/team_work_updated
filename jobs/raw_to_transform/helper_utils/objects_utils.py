from wealthcentral.jobs.raw_to_transform.job_utils import (
    participant,
    participant_beneficiary,
    txn,
    transaction_type,
    transaction_count_summary,
    sponsor,
    source_fund_future_allocation,
    rps_balance,
    role_code_helper,
    product_helper,
    producer,
    premier_fund_translation,
    plan_withdrawal_type,
    plan_transaction_trend,
    third_party_admin,
    plan_source,
    plan_participant_status_trend,
    plan_fund,
    plan,
    participant_source,
    participant_min_distributions,
    participant_loan,
    participant_life_fund_monthly,
    participant_installments,
    participant_gaa_fund_balance,
    participant_fund_loan,
    participant_core_balance_monthly,
    participant_core_balance,
    ssn_change_merge_helper,
    participant_auto_enrollments,
    participant_alt_payee,
    participant_source_transfer_balance,
    part_broker_rep_agent_relation,
    pais_contact,
    nq_transaction,
    nq_plan,
    nq_participant_fund_monthly,
    nq_participant_fund,
    nq_participant_distribution,
    nq_participant_contribution,
    nq_participant,
    nq_part_investment_product_elc,
    nq_part_investment_election,
    nq_employer,
    nq_beneficiary,
    money_source_helper,
    market_segment,
    plan_fund_source,
    fund_asset,
    field_office_description,
    transaction_trend,
    disbursement,
    participant_status_trend,
    div_sub,
    cust_retirement_account,
    crm_trustee_contact,
    disbursement_rollover,
    dcs_dtcc_pov_far_agent_dat,
    transaction_balance_summary,
    client,
    automation_type,
    auto_method,cust_adv_helper,
)


class TransformParameters:
    def __init__(self, entity_name, entity_load, primary_keys):
        self.entity_name = entity_name.lower()
        self.entity_load = entity_load.lower()
        self.table_name = entity_name.replace('.', '_').lower()
        if primary_keys:
            self.primary_keys = primary_keys.split(",")
        else:
            self.primary_keys = None


JobNameToJobMapper = {
    "participant": participant.transform,
    "participant_beneficiary": participant_beneficiary.transform,
    "txn": txn.transform,
    "transaction_type": transaction_type.transform,
    "transaction_count_summary": transaction_count_summary.transform,
    "sponsor": sponsor.transform,
    "source_fund_future_allocation": source_fund_future_allocation.transform,
    "rps_balance": rps_balance.transform,
    "role_code_helper": role_code_helper.transform,
    "product_helper": product_helper.transform,
    "producer": producer.transform,
    "premier_fund_translation": premier_fund_translation.transform,
    "plan_withdrawal_type": plan_withdrawal_type.transform,
    "plan_transaction_trend": plan_transaction_trend.transform,
    "third_party_admin": third_party_admin.transform,
    "plan_source": plan_source.transform,
    "plan_participant_status_trend": plan_participant_status_trend.transform,
    "plan_fund": plan_fund.transform,
    "plan": plan.transform,
    "participant_source": participant_source.transform,
    "participant_min_distributions": participant_min_distributions.transform,
    "participant_loan": participant_loan.transform,
    "participant_life_fund_monthly": participant_life_fund_monthly.transform,
    "participant_installments": participant_installments.transform,
    "participant_gaa_fund_balance": participant_gaa_fund_balance.transform,
    "participant_fund_loan": participant_fund_loan.transform,
    "participant_core_balance_monthly": participant_core_balance_monthly.transform,
    "participant_core_balance": participant_core_balance.transform,
    "ssn_change_merge_helper": ssn_change_merge_helper.transform,
    "participant_auto_enrollments": participant_auto_enrollments.transform,
    "participant_alt_payee": participant_alt_payee.transform,
    "participant_source_transfer_balance": participant_source_transfer_balance.transform,
    "part_broker_rep_agent_relation": part_broker_rep_agent_relation.transform,
    "pais_contact": pais_contact.transform,
    "nq_transaction": nq_transaction.transform,
    "nq_plan": nq_plan.transform,
    "nq_participant_fund_monthly": nq_participant_fund_monthly.transform,
    "nq_participant_fund": nq_participant_fund.transform,
    "nq_participant_distribution": nq_participant_distribution.transform,
    "nq_participant_contribution": nq_participant_contribution.transform,
    "nq_participant": nq_participant.transform,
    "nq_part_investment_product_elc": nq_part_investment_product_elc.transform,
    "nq_part_investment_election": nq_part_investment_election.transform,
    "nq_employer": nq_employer.transform,
    "nq_beneficiary": nq_beneficiary.transform,
    "money_source_helper": money_source_helper.transform,
    "market_segment": market_segment.transform,
    "plan_fund_source": plan_fund_source.transform,
    "fund_asset": fund_asset.transform,
    "field_office_description": field_office_description.transform,
    "transaction_trend": transaction_trend.transform,
    "disbursement": disbursement.transform,
    "participant_status_trend": participant_status_trend.transform,
    "div_sub": div_sub.transform,
    "cust_retirement_account": cust_retirement_account.transform,
    "crm_trustee_contact": crm_trustee_contact.transform,
    "disbursement_rollover": disbursement_rollover.transform,
    "dcs_dtcc_pov_far_agent_dat": dcs_dtcc_pov_far_agent_dat.transform,
    "transaction_balance_summary": transaction_balance_summary.transform,
    "client": client.transform,
    "automation_type": automation_type.transform,
    "auto_method": auto_method.transform,
    "cust_adv_helper": cust_adv_helper.transform,
}
