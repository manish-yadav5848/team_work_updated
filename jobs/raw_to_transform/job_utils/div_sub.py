
from pyspark.sql import SparkSession
from pyspark.sql.functions import *


def transform(spark: SparkSession, primary_key: list):
    part_bal_df = spark.sql("select core.plan_number, core.participant_id, core.core_balance, Cast( ( COALESCE(core.sdba_cash_value_amount, 0.00) + COALESCE(core.loan_balance, 0.00) + COALESCE(t3.life_balance, 0.00) ) AS DECIMAL(13, 2) ) as non_core_balance from ( select coalesce(t1.plan_number, t2.plan_number) as plan_number, coalesce(t1.participant_id, t2.participant_id) as participant_id, coalesce(t1.core_balance, 0) as core_balance, coalesce(t1.sdba_cash_value_amount, 0) as sdba_cash_value_amount, coalesce(t2.loan_balance, 0) as loan_balance from ( select plan_number, participant_id, sum(cash_value_amount) as core_balance, sum(sdba_cash_value_amount) as sdba_cash_value_amount from ( select coalesce(participant_id, '-9999') AS participant_id, coalesce(nullif(SOPB.plan_number, ''), '-9999') AS plan_number, coalesce(CAST(cash_value AS DECIMAL(17, 2)), 0) AS cash_value_amount, case when SOPB.fund_iv = '70' then COALESCE(CAST(cash_value AS DECIMAL(15, 2)), 0) else cast('0' as DECIMAL(15, 2)) end AS sdba_cash_value_amount from exn_xxewre01_xxewrpcb_jb SOPB left outer join exn_xxewre01_xxewrpfd_jb AS pf ON SOPB.plan_number = pf.plan_number AND SOPB.fund_iv = pf.fund_iv where not ( SOPB.client_id = 'AB' and ( pf.price_id in ('', '-9999') or pf.price_id is null ) and cash_value = 0 ) union all select coalesce(participant_id, '-9999') AS participant_id, coalesce(nullif(plan_number, ''), '-9999') AS plan_number, coalesce(CAST(cash_value AS DECIMAL(17, 2)), 0) AS cash_value_amount, COALESCE( CAST(brokerage_account_cash_value AS DECIMAL(15, 2)), 0 ) AS sdba_cash_value_amount from super_omni_newr_partsrcval_daily_ng_dat union all select coalesce(part_account_num, '-9999') AS participant_id, coalesce(nullif(plan_id, ''), '-9999') AS plan_number, coalesce(CAST(cash_value AS DECIMAL(17, 2)), 0) AS cash_value_amount, CAST(0 as DECIMAL(15, 2)) AS sdba_cash_value_amount from nw00paap_nlarc_prdps_partval_pdab_data union all select coalesce(part_acc_num, '-9999') AS participant_id, coalesce(nullif(plan_id, ''), '-9999') AS plan_number, coalesce(CAST(cash_value AS DECIMAL(17, 2)), 0) AS cash_value_amount, CAST(0 as DECIMAL(15, 2)) AS sdba_cash_value_amount from f950_rps_parsdba_bal_ewr_dat ) group by plan_number, participant_id ) as t1 full outer join ( select plan_number, participant_id, sum(loan_balance) as loan_balance from ( select coalesce(plan_id, '-9999') as plan_number, coalesce(participant_acc_num, '-9999') as participant_id, cast(outstanding_prncpl_bal_amt as decimal(17, 2)) as loan_balance from nw00paap_nlarc_prdps_partloan_pdab_data union all select plan_number, participant_id, case when loan_status_flag in ('1', '5', 'C') then cast('0' as DECIMAL(12, 2)) when loan_status_flag in ('2', '4', '6', '7') and date_diff( coalesce(source_cycle_date, current_date -1), date_of_previous_loan_payment ) > 365 then cast('0' as DECIMAL(12, 2)) else coalesce(cast(current_loan_balance as DECIMAL(12, 2)), 0) end as loan_balance from exn_xxewre01_xxewrppl_jb union all select plan_number, participant_id, case when loan_status_flag in ('1', '5', 'C') then cast('0' as DECIMAL(12, 2)) when loan_status_flag in ('2', '4', '6', '7') and date_diff( coalesce(source_cycle_date, current_date -1), date_of_previous_loan_payment ) > 365 then cast('0' as DECIMAL(12, 2)) else coalesce(cast(current_loan_balance as DECIMAL(12, 2)), 0) end as loan_balance from exn_xxewre01_xxewrppl_ng ) group by plan_number, participant_id ) t2 on t1.participant_id = t2.participant_id and t1.plan_number = t2.plan_number ) as core left join ( select plan_id as plan_number, participant_account_number as participant_id, sum(CAST(cash_value_amt as DECIMAL(11, 2))) as life_balance from super_omni_newr_lifeval_monthly_ng_dat group by plan_id, participant_account_number ) as t3 on t3.participant_id = core.participant_id and t3.plan_number = core.plan_number")
    part_bal_df.createOrReplaceTempView("div_part_bal")

    exn_xxewre01_xxewrdpg_jb_df = spark.sql("SELECT client_id,dpg.plan_number,dpg.div_sub_id,cast(null as varchar(36)) as div_sub_key,address_city,address_line_1,address_line_2,address_line_3,address_state,address_zip_code,primary_name,secondary_name,'VRP-SP' as source_system,source_cycle_date,case when cardinality(account_type_code)=1 and account_type_code[0]='ALLOC' then 'N' when cardinality(account_type_code)=-1 then cast(null as varchar(1)) else 'Y' end as PLAN_UNALLOCATED_FLAG FROM exn_xxewre01_xxewrdpg_jb dpg left outer join (select collect_set(account_type_code) as account_type_code,div_sub_id,plan_number from (select case when upper(trim(sp.participant_account_type_code)) in ('ALLOC', 'ALOC') then 'ALLOC' when upper(trim(sp.participant_account_type_code)) not in ('ALLOC', 'ALOC') and (pb.core_balance + non_core_balance) <= 0 then 'ALLOC' else participant_account_type_code end as account_type_code, op.div_sub_id, op.plan_number from super_omni_newr_particpantaccount_daily_jb_dat sp right join exn_xxewre01_xxewrptd_jb op on op.part_number = sp.participant_id and op.plan_number = sp.plan_number left outer join div_part_bal as pb on pb.plan_number = op.plan_number and pb.participant_id = op.part_number where op.div_sub_id is not null or op.div_sub_id <> '' ) group by div_sub_id,plan_number ) as ptd on dpg.plan_number=ptd.plan_number and dpg.div_sub_id=ptd.div_sub_id ")

    super_omni_newr_plan_divsub_daily_ng_dat_df = spark.sql("SELECT client_id,dpg.plan_number,dpg.div_sub_id,cast(null as varchar(36)) as div_sub_key,address_city,address_line_1,address_line_2,address_line_3,address_state,address_zip_code,primary_name,secondary_name,'VRP-PB' as source_system,source_cycle_date,case when cardinality(account_type_code)=1 and account_type_code[0]='ALLOC' then 'N'  when cardinality(account_type_code)=-1 then cast(null as varchar(1)) else 'Y' end as PLAN_UNALLOCATED_FLAG FROM super_omni_newr_plan_divsub_daily_ng_dat dpg left outer join (select collect_set(account_type_code) as account_type_code,div_sub_id,plan_number from (select case when upper(trim(sp.participant_account_type_code)) in ('ALLOC', 'ALOC') then 'ALLOC' when upper(trim(sp.participant_account_type_code)) not in ('ALLOC', 'ALOC') and (pb.core_balance + non_core_balance) <= 0 then 'ALLOC' else participant_account_type_code end as account_type_code, op.div_sub_id, op.plan_number from super_omni_newr_particpantaccount_daily_ng_dat sp right join exn_xxewre01_xxewrptd_ng op on op.part_number = sp.participant_id and op.plan_number = sp.plan_number left outer join div_part_bal as pb on pb.plan_number = op.plan_number and pb.participant_id = op.part_number where op.div_sub_id is not null or op.div_sub_id <> '' ) group by div_sub_id,plan_number ) as ptd on dpg.plan_number=ptd.plan_number and ptd.div_sub_id=dpg.div_sub_id ")

    transform_df = exn_xxewre01_xxewrdpg_jb_df.unionByName(super_omni_newr_plan_divsub_daily_ng_dat_df)

    return transform_df